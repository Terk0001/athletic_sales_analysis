# -*- coding: utf-8 -*-
"""athletic_sales_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18bPQ9CJ7kYtoIV6vmT6Ba74d2FphtqhI
"""

# Import Libraries and Dependencies
import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

"""### 1. Combine and Clean the Data
#### Import CSVs
"""

# Read the CSV files into DataFrames.
sales_in_2020 = pd.read_csv("/content/2020.csv")
sales_in_2021 = pd.read_csv("/content/2021.csv")



# Display the 2020 sales DataFrame
sales_in_2020

# Display the 2021 sales DataFrame
sales_in_2021

"""#### Check the data types of each DataFrame"""

# Check the 2020 sales data types.
sales_in_2020.info()

# Check the 2021 sales data types.
sales_in_2021.info()

"""#### Combine the sales data by rows."""

# Combine the 2020 and 2021 sales DataFrames on the rows and reset the index.
combined_sales = pd.concat([sales_in_2020, sales_in_2021], axis="rows", join="inner").reset_index(drop=True)
combined_sales

# Check if any values are null.
combined_sales.isna().sum()

# Check the data type of each column
combined_sales.info()

# Convert the "invoice_date" to a datetime datatype
combined_sales['invoice_date']= pd.to_datetime(combined_sales['invoice_date'])
combined_sales

# Confirm that the "invoice_date" data type has been changed.
combined_sales.info()

"""### 2. Determine which Region Sold the Most Products

#### Using `groupby`
"""

# Show the number products sold for region, state, and city.
# Rename the sum to "Total_Products_Sold".
total_products_sold = combined_sales.groupby(['region','state','city'])\
            ['units_sold'].agg(Total_Products_Sold=("sum"))


# Show the top 5 results.
total_products_sold.sort_values(by=(['Total_Products_Sold']), ascending=False).head()

"""#### Using `pivot_table`"""

# Show the number products sold for region, state, and city.
total_products_sold = pd.pivot_table(combined_sales,
                                     index=['region','state','city'],
                                     values='units_sold',
                                     aggfunc='sum')

# Rename the "units_sold" column to "Total_Products_Sold"
combined_products = total_products_sold.rename(columns={"units_sold": "Total_Products_Sold"})

# Show the top 5 results.
combined_products.sort_values(by=['Total_Products_Sold'], ascending=False).head()

"""### 3. Determine which Region had the Most Sales

#### Using `groupby`
"""

# Show the total sales for the products sold for each region, state, and city.
# Rename the "total_sales" column to "Total Sales"
all_sales = combined_sales.groupby(['region','state','city'])\
            ['total_sales'].agg(Total_Sales=("sum"))

# Show the top 5 results.
all_sales.sort_values(by=(['Total_Sales']), ascending=False).head()

"""#### Using `pivot_table`"""

# Show the total sales for the products sold for each region, state, and city.
combine_total_sales = pd.pivot_table(combined_sales,
                                     index=['region','state','city'],
                                     values='total_sales',
                                     aggfunc='sum')

# Optional: Rename the "total_sales" column to "Total Sales"
all_sales = combine_total_sales.rename(columns={"total_sales": "Total_Sales"})

# Show the top 5 results.
all_sales.sort_values(by=['Total_Sales'], ascending=False).head()

"""### 4. Determine which Retailer had the Most Sales

#### Using `groupby`
"""

# Show the total sales for the products sold for each retailer, region, state, and city.
# Rename the "total_sales" column to "Total Sales"
combined_retailer_sales = combined_sales.groupby(['retailer','region','state','city'])\
            ['total_sales'].agg(Total_Sales=("sum"))

# Show the top 5 results.
combined_retailer_sales.sort_values(by=(['Total_Sales']), ascending=False).head()

"""#### Using `pivot_table`"""

# Show the total sales for the products sold for each retailer, region, state, and city.
retailer_sales_combined = pd.pivot_table(combined_sales,
                                     index=['retailer','region','state','city'],
                                     values='total_sales',
                                     aggfunc='sum')

# Optional: Rename the "total_sales" column to "Total Sales"
combined_retailer_sales = retailer_sales_combined.rename(columns={"total_sales": "Total_Sales"})

# Show the top 5 results.
combined_retailer_sales.sort_values(by=['Total_Sales'], ascending=False).head()

"""### 5. Determine which Retailer Sold the Most Women's Athletic Footwear"""

# Filter the sales data to get the women's athletic footwear sales data.
womens_footware = combined_sales[combined_sales["product"].str.contains('Women\'s Athletic Footwear')]
womens_footware

"""#### Using `groupby`"""

# Show the total number of women's athletic footwear sold for each retailer, region, state, and city.
# Rename the "units_sold" column to "Womens_Footwear_Units_Sold"
wf_units_sold = womens_footware.groupby(['retailer','region','state','city'])\
            ['units_sold'].agg(Womens_Footwear_Units_Sold=("sum"))

# Show the top 5 results.
wf_units_sold.sort_values(by=(['Womens_Footwear_Units_Sold']), ascending=False).head()

"""#### Using `pivot_table`"""

# Show the total number of women's athletic footwear sold for each retailer, region, state, and city.
wf_retailer = pd.pivot_table(womens_footware,
                                     index=['retailer','region','state','city'],
                                     values='units_sold',
                                     aggfunc='sum')

# Rename the "units_sold" column to "Womens_Footwear_Units_Sold"
wf_units_sold = wf_retailer.rename(columns={"units_sold": "Womens_Footwear_Units_Sold"})

# Show the top 5 results.
wf_units_sold.sort_values(by=['Womens_Footwear_Units_Sold'], ascending=False).head()

"""### 6. Determine the Day with the Most Women's Athletic Footwear Sales"""

# Create a pivot table with the 'invoice_date' column is the index, and the "total_sales" as the values.
womens_footware_numbers = pd.pivot_table(womens_footware,
                                     index=['invoice_date'],
                                     values='total_sales',
                                     aggfunc='sum')

# Optional: Rename the "total_sales" column to "Total Sales"
womens_footware_numbers_date = womens_footware_numbers.rename(columns={"total_sales": "Total_Sales"})

# Show the table.
womens_footware_numbers_date.head()

# Resample the pivot table into daily bins, and get the total sales for each day.
daily_womens_sales = womens_footware_numbers_date.resample('D').sum()

# Sort the resampled pivot table in descending order on "Total Sales".
daily_womens_sales.sort_values(by=['Total_Sales'], ascending=False)

"""### 7.  Determine the Week with the Most Women's Athletic Footwear Sales"""

# Resample the pivot table into weekly bins, and get the total sales for each week.
womens_sales_weekly = womens_footware_numbers_date.resample('W').sum()

# Sort the resampled pivot table in descending order on "Total Sales".
womens_sales_weekly.sort_values(by=['Total_Sales'], ascending=False)

